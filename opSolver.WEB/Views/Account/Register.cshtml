@model opSolver.WEB.Models.RegisterModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_emptyLayout.cshtml";
}

<header class="logreg">
    <div class="container-fluid">
        <div class="row justify-content-center text-center">
            <img src="~/Reference/img/icon.jpg" class="logo">
            <div class="w-100"></div>
            <h3>Registration</h3>
            <div class="w-100"></div>
            <div class="row">
                <div class="col-md-6 text-right">
                    @Html.ActionLink(lang.Resource.Login, "Login", "Account", new { @class = "btn-split" })
                </div>
                <div class="col-md-6 text-left">
                    @Html.ActionLink(lang.Resource.Registration, "Register", "Account", new { @class = "btn-split active" })
                </div>

            </div>
            <div class="w-100"></div>
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "register-form" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-group">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger", @align = "center" })
                    @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control opInput", @placeholder = lang.Resource.Email } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger", @align = "center" })
                    @Html.EditorFor(m => m.Password, new { htmlAttributes = new { @class = "form-control opInput", @placeholder = lang.Resource.Password, @type = "password" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger", @align = "center" })
                    @Html.EditorFor(m => m.ConfirmPassword, new { htmlAttributes = new { @class = "form-control opInput", @placeholder = lang.Resource.Password, @type = "password" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger", @align = "center" })
                    @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control opInput", @placeholder = lang.Resource.Name } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger", @align = "center" })
                    @Html.EditorFor(m => m.Address, new { htmlAttributes = new { @class = "form-control opInput", @placeholder = lang.Resource.Address } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
                
                <button type="submit" class="form-control opButton">@lang.Resource.accept</button>
            }
        </div>
    </div>
</header>

