@model opSolver.WEB.Models.RegisterModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_emptyLayout.cshtml";
}

<header class="register">
    
    <div class="container">
       
        <div class="row justify-content-center text-center">

            <h1 class="section-title">
                @lang.Resource.register
            </h1>
            <div class="w-100"></div>
            <ul class="nav justify-content-center">
                <li class="nav-item">
                    <a href="@Url.Action("Login")" class="nav-link">@lang.Resource.login</a>
                </li>
                <li class="nav-item">
                    <a href="@Url.Action("Register")" class="nav-link active">@lang.Resource.register</a>
                </li>
            </ul>
            <div class="w-100"></div>
            <br />
            @using (Html.BeginForm("Register", "Account", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(m => m.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(m => m.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Address, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(m => m.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                </div>
                <button type="submit" class="btn btn-outline-primary btn-ops">@lang.Resource.submit</button>
            }

        </div>
    </div>

</header>


